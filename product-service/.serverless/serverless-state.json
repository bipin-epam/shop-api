{
  "service": {
    "service": "api",
    "serviceObject": {
      "name": "api"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "stage": "dev",
      "region": "ap-south-1",
      "profile": "epam_bipin",
      "httpApi": {
        "cors": true
      },
      "environment": {
        "PRODUCTS_TABLE": "products",
        "STOCKS_TABLE": "stocks"
      },
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "CreateProductLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-dev-createProduct"
            }
          },
          "ProductListLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-dev-productList"
            }
          },
          "ProductByIdLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-dev-productById"
            }
          },
          "CatalogBatchProcessLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-dev-catalogBatchProcess"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": ["lambda.amazonaws.com"]
                    },
                    "Action": ["sts:AssumeRole"]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": ["-", ["api", "dev", "lambda"]]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/api-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": ["logs:PutLogEvents"],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/api-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Deny",
                        "Action": "logs:PutLogEvents",
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/api-dev-swagger-ui:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/api-dev-swagger-json:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "sqs:ReceiveMessage",
                          "sqs:DeleteMessage",
                          "sqs:GetQueueAttributes"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": ["catalogItemsQueue", "Arn"]
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "api",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "CreateProductLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api/dev/1701404399551-2023-12-01T04:19:59.551Z/createProduct.zip"
              },
              "Handler": "src/handlers/create/index.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "api-dev-createProduct",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PRODUCTS_TABLE": "products",
                  "STOCKS_TABLE": "stocks"
                }
              },
              "Role": {
                "Fn::GetAtt": ["CreateProductIamRoleLambdaExecution", "Arn"]
              }
            },
            "DependsOn": [
              "CreateProductIamRoleLambdaExecution",
              "CreateProductLogGroup"
            ]
          },
          "ProductListLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api/dev/1701404399551-2023-12-01T04:19:59.551Z/productList.zip"
              },
              "Handler": "src/handlers/productList/index.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "api-dev-productList",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PRODUCTS_TABLE": "products",
                  "STOCKS_TABLE": "stocks"
                }
              },
              "Role": {
                "Fn::GetAtt": ["ProductListIamRoleLambdaExecution", "Arn"]
              }
            },
            "DependsOn": [
              "ProductListIamRoleLambdaExecution",
              "ProductListLogGroup"
            ]
          },
          "ProductByIdLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api/dev/1701404399551-2023-12-01T04:19:59.551Z/productById.zip"
              },
              "Handler": "src/handlers/productById/index.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "api-dev-productById",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PRODUCTS_TABLE": "products",
                  "STOCKS_TABLE": "stocks"
                }
              },
              "Role": {
                "Fn::GetAtt": ["ProductByIdIamRoleLambdaExecution", "Arn"]
              }
            },
            "DependsOn": [
              "ProductByIdIamRoleLambdaExecution",
              "ProductByIdLogGroup"
            ]
          },
          "CatalogBatchProcessLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api/dev/1701404399551-2023-12-01T04:19:59.551Z/catalogBatchProcess.zip"
              },
              "Handler": "src/handlers/catalogBatchProcess/index.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "api-dev-catalogBatchProcess",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PRODUCTS_TABLE": "products",
                  "STOCKS_TABLE": "stocks",
                  "SNS_ARN": {
                    "Ref": "createProductTopic"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "CatalogBatchProcessIamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CatalogBatchProcessIamRoleLambdaExecution",
              "CatalogBatchProcessLogGroup"
            ]
          },
          "SwaggerUILambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api/dev/1701404399551-2023-12-01T04:19:59.551Z/swaggerUI.zip"
              },
              "Handler": "swagger/swagger-html.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "api-dev-swagger-ui",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PRODUCTS_TABLE": "products",
                  "STOCKS_TABLE": "stocks"
                }
              },
              "Role": {
                "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"]
              }
            }
          },
          "SwaggerJSONLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api/dev/1701404399551-2023-12-01T04:19:59.551Z/swaggerJSON.zip"
              },
              "Handler": "swagger/swagger-json.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "api-dev-swagger-json",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PRODUCTS_TABLE": "products",
                  "STOCKS_TABLE": "stocks"
                }
              },
              "Role": {
                "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"]
              }
            }
          },
          "SwaggerUILambdaVersionaBbP9MejCg1IABiXJKkfK7vhH8AQLzBFYRRtn09asY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SwaggerUILambdaFunction"
              },
              "CodeSha256": "8/dkMggAFZOO4mrA8HgTbA0A2fdoNxuAta2C0sBdcLk="
            }
          },
          "SwaggerJSONLambdaVersioncALSk6frVgzx4jFeY1SNzeSEj0N7Hy6pJUWcv9znDhs": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SwaggerJSONLambdaFunction"
              },
              "CodeSha256": "B1FvvYGyoYFtBrUq/M5Y3jc5kIPvOsAT05l4iyU/U28="
            }
          },
          "ProductListLambdaVersion605Na78I6mcLe0rVjUHr3vXvb5TpENBZpXgIEV49Q": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ProductListLambdaFunction"
              },
              "CodeSha256": "Pm1RTOqB7JcSfWsQObJz7d6r4H+eoqx0i3IMiVzQ69g="
            }
          },
          "CatalogBatchProcessLambdaVersionmq0U53AfRUsDzbclRGJ9eBkT0bvFbwddy8BF2eXnks": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CatalogBatchProcessLambdaFunction"
              },
              "CodeSha256": "tIP/8TmDE5yBCr3MNybKcAe+AGoJ+VRS/u2R59JXxV4="
            }
          },
          "ProductByIdLambdaVersionEr9LipW3wNqpaT41JBIytuiW5yO0QfVFYnXIYhhAXE": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ProductByIdLambdaFunction"
              },
              "CodeSha256": "t52aZYk3fxOM1IL3SCX7UnSN5jUW3mbILCd+lwCueMk="
            }
          },
          "CreateProductLambdaVersionNXNc7q7lxsm2rae5j4lpSC4Uwr5rTpAIQ5AYyNiPY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateProductLambdaFunction"
              },
              "CodeSha256": "Fyc5jijR8ZgqEJoJSZlVBZcpxo9I78GwoADYACDmUPk="
            }
          },
          "CatalogBatchProcessEventSourceMappingSQSCatalogItemsQueue": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "DependsOn": "CatalogBatchProcessIamRoleLambdaExecution",
            "Properties": {
              "BatchSize": 5,
              "EventSourceArn": {
                "Fn::GetAtt": ["catalogItemsQueue", "Arn"]
              },
              "FunctionName": {
                "Fn::GetAtt": ["CatalogBatchProcessLambdaFunction", "Arn"]
              },
              "Enabled": true
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-api",
              "ProtocolType": "HTTP",
              "CorsConfiguration": {
                "AllowHeaders": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "AllowMethods": ["OPTIONS", "POST", "GET"],
                "AllowOrigins": ["*"]
              }
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "CreateProductLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": ["CreateProductLambdaFunction", "Arn"]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationCreateProduct": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"CreateProductLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostProducts": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /products",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationCreateProduct"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationCreateProduct"
          },
          "ProductListLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": ["ProductListLambdaFunction", "Arn"]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationProductList": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ProductListLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetProducts": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /products",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationProductList"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationProductList"
          },
          "ProductByIdLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": ["ProductByIdLambdaFunction", "Arn"]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationProductById": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ProductByIdLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetProductsIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /products/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationProductById"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationProductById"
          },
          "SwaggerUILambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": ["SwaggerUILambdaFunction", "Arn"]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationSwaggerUI": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"SwaggerUILambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetDevSwagger": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /dev/swagger",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationSwaggerUI"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationSwaggerUI"
          },
          "SwaggerJSONLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": ["SwaggerJSONLambdaFunction", "Arn"]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationSwaggerJSON": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"SwaggerJSONLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetDevSwaggerjson": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /dev/swagger.json",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationSwaggerJSON"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationSwaggerJSON"
          },
          "CreateProductIamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": ["lambda.amazonaws.com"]
                    },
                    "Action": ["sts:AssumeRole"]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": ["-", ["api", "dev", "lambda"]]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/api-dev-createProduct:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": ["dynamodb:PutItem"],
                        "Resource": "*"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "api",
                    "dev",
                    "createProduct",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": []
            }
          },
          "ProductListIamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": ["lambda.amazonaws.com"]
                    },
                    "Action": ["sts:AssumeRole"]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": ["-", ["api", "dev", "lambda"]]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/api-dev-productList:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": ["dynamodb:Scan"],
                        "Resource": "*"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "api",
                    "dev",
                    "productList",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": []
            }
          },
          "ProductByIdIamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": ["lambda.amazonaws.com"]
                    },
                    "Action": ["sts:AssumeRole"]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": ["-", ["api", "dev", "lambda"]]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/api-dev-productById:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": ["dynamodb:Query"],
                        "Resource": "*"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "api",
                    "dev",
                    "productById",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": []
            }
          },
          "CatalogBatchProcessIamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": ["lambda.amazonaws.com"]
                    },
                    "Action": ["sts:AssumeRole"]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": ["-", ["api", "dev", "lambda"]]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/api-dev-catalogBatchProcess:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "sqs:ReceiveMessage",
                          "sqs:DeleteMessage",
                          "sqs:GetQueueAttributes"
                        ],
                        "Resource": [
                          {
                            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"IamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][3][\"Resource\"][0]"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": ["dynamodb:PutItem"],
                        "Resource": "*"
                      },
                      {
                        "Effect": "Allow",
                        "Action": ["sns:Publish"],
                        "Resource": {
                          "Ref": "createProductTopic"
                        }
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "api",
                    "dev",
                    "catalogBatchProcess",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": []
            }
          },
          "catalogItemsQueue": {
            "Type": "AWS::SQS::Queue"
          },
          "createProductTopic": {
            "Type": "AWS::SNS::Topic"
          },
          "productTopicSubscription": {
            "Type": "AWS::SNS::Subscription",
            "Properties": {
              "Endpoint": "bipin_gosain@epam.com",
              "Protocol": "email",
              "TopicArn": {
                "Ref": "createProductTopic"
              }
            }
          },
          "productTopicSubscriptionHighValue": {
            "Type": "AWS::SNS::Subscription",
            "Properties": {
              "Endpoint": "bipingosain3492@gmail.com",
              "Protocol": "email",
              "TopicArn": {
                "Ref": "createProductTopic"
              },
              "FilterPolicyScope": "MessageAttributes",
              "FilterPolicy": {
                "maxPrice": [
                  {
                    "numeric": [">", 1000]
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-api-dev-ServerlessDeploymentBucketName"
            }
          },
          "SwaggerUILambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SwaggerUILambdaVersionaBbP9MejCg1IABiXJKkfK7vhH8AQLzBFYRRtn09asY"
            },
            "Export": {
              "Name": "sls-api-dev-SwaggerUILambdaFunctionQualifiedArn"
            }
          },
          "SwaggerJSONLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SwaggerJSONLambdaVersioncALSk6frVgzx4jFeY1SNzeSEj0N7Hy6pJUWcv9znDhs"
            },
            "Export": {
              "Name": "sls-api-dev-SwaggerJSONLambdaFunctionQualifiedArn"
            }
          },
          "ProductListLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ProductListLambdaVersion605Na78I6mcLe0rVjUHr3vXvb5TpENBZpXgIEV49Q"
            },
            "Export": {
              "Name": "sls-api-dev-ProductListLambdaFunctionQualifiedArn"
            }
          },
          "CatalogBatchProcessLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CatalogBatchProcessLambdaVersionmq0U53AfRUsDzbclRGJ9eBkT0bvFbwddy8BF2eXnks"
            },
            "Export": {
              "Name": "sls-api-dev-CatalogBatchProcessLambdaFunctionQualifiedArn"
            }
          },
          "ProductByIdLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ProductByIdLambdaVersionEr9LipW3wNqpaT41JBIytuiW5yO0QfVFYnXIYhhAXE"
            },
            "Export": {
              "Name": "sls-api-dev-ProductByIdLambdaFunctionQualifiedArn"
            }
          },
          "CreateProductLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateProductLambdaVersionNXNc7q7lxsm2rae5j4lpSC4Uwr5rTpAIQ5AYyNiPY"
            },
            "Export": {
              "Name": "sls-api-dev-CreateProductLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-api-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-api-dev-HttpApiUrl"
            }
          },
          "catalogItemsQueue": {
            "Value": {
              "Ref": "catalogItemsQueue"
            }
          },
          "catalogItemsQueueArn": {
            "Value": {
              "Fn::GetAtt": ["catalogItemsQueue", "Arn"]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "autoswagger": {
        "title": "Shop API",
        "apiType": "httpApi",
        "generateSwaggerOnDeploy": true,
        "swaggerPath": "swagger",
        "useStage": true
      },
      "webpack": {
        "excludeFiles": ["**/*.test.js", "**/*d.ts", "**/*.py"],
        "webpackConfig": "webpack.config.js",
        "includeModules": false,
        "packager": "npm"
      }
    },
    "plugins": [
      "serverless-auto-swagger",
      "serverless-offline",
      "serverless-webpack",
      "serverless-iam-roles-per-function"
    ],
    "pluginsData": {},
    "functions": {
      "createProduct": {
        "handler": "src/handlers/create/index.handler",
        "events": [
          {
            "httpApi": {
              "path": "/products",
              "method": "post",
              "bodyType": "CreateProductBody",
              "responseData": {
                "201": {
                  "description": "Product saved successfully!",
                  "bodyType": "ProductSaved"
                },
                "400": {
                  "description": "Create product request failed with error",
                  "bodyType": "Error"
                },
                "500": {
                  "description": "There was some error, retry later!",
                  "bodyType": "Error"
                }
              }
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/products"
          }
        ],
        "iamRoleStatements": [
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"CreateProductIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][1]"
          }
        ],
        "name": "api-dev-createProduct",
        "package": {
          "artifact": ".serverless\\createProduct.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "CreateProductLambdaVersionNXNc7q7lxsm2rae5j4lpSC4Uwr5rTpAIQ5AYyNiPY"
      },
      "productList": {
        "handler": "src/handlers/productList/index.handler",
        "events": [
          {
            "httpApi": {
              "path": "/products",
              "method": "get",
              "responseData": {
                "200": {
                  "description": "Products fetched successfully!",
                  "bodyType": "ProductWithStock"
                }
              }
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/products"
          }
        ],
        "iamRoleStatements": [
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ProductListIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][1]"
          }
        ],
        "name": "api-dev-productList",
        "package": {
          "artifact": ".serverless\\productList.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "ProductListLambdaVersion605Na78I6mcLe0rVjUHr3vXvb5TpENBZpXgIEV49Q"
      },
      "productById": {
        "handler": "src/handlers/productById/index.handler",
        "events": [
          {
            "httpApi": {
              "path": "/products/{id}",
              "method": "get",
              "responseData": {
                "200": {
                  "description": "Product found!",
                  "bodyType": "ProductById"
                },
                "404": {
                  "description": "No such product found!",
                  "bodyType": "NotFound"
                }
              }
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/products/{id}"
          }
        ],
        "iamRoleStatements": [
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ProductByIdIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][1]"
          }
        ],
        "name": "api-dev-productById",
        "package": {
          "artifact": ".serverless\\productById.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "ProductByIdLambdaVersionEr9LipW3wNqpaT41JBIytuiW5yO0QfVFYnXIYhhAXE"
      },
      "catalogBatchProcess": {
        "environment": {
          "SNS_ARN": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"CatalogBatchProcessLambdaFunction\"][\"Properties\"][\"Environment\"][\"Variables\"][\"SNS_ARN\"]"
          }
        },
        "handler": "src/handlers/catalogBatchProcess/index.handler",
        "events": [
          {
            "sqs": {
              "arn": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"IamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][3][\"Resource\"][0]"
              },
              "batchSize": 5
            }
          }
        ],
        "iamRoleStatements": [
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"CatalogBatchProcessIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][2]"
          },
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"CatalogBatchProcessIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][3]"
          }
        ],
        "name": "api-dev-catalogBatchProcess",
        "package": {
          "artifact": ".serverless\\catalogBatchProcess.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "CatalogBatchProcessLambdaVersionmq0U53AfRUsDzbclRGJ9eBkT0bvFbwddy8BF2eXnks"
      },
      "swaggerUI": {
        "name": "api-dev-swagger-ui",
        "handler": "swagger/swagger-html.handler",
        "disableLogs": true,
        "events": [
          {
            "httpApi": {
              "method": "get",
              "path": "/dev/swagger"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/dev/swagger"
          }
        ],
        "package": {
          "artifact": ".serverless\\swaggerUI.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "SwaggerUILambdaVersionaBbP9MejCg1IABiXJKkfK7vhH8AQLzBFYRRtn09asY"
      },
      "swaggerJSON": {
        "name": "api-dev-swagger-json",
        "handler": "swagger/swagger-json.handler",
        "disableLogs": true,
        "events": [
          {
            "httpApi": {
              "method": "get",
              "path": "/dev/swagger.json"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/dev/swagger.json"
          }
        ],
        "package": {
          "artifact": ".serverless\\swaggerJSON.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "SwaggerJSONLambdaVersioncALSk6frVgzx4jFeY1SNzeSEj0N7Hy6pJUWcv9znDhs"
      }
    },
    "resources": {
      "Resources": {
        "catalogItemsQueue": {
          "Type": "AWS::SQS::Queue"
        },
        "createProductTopic": {
          "Type": "AWS::SNS::Topic"
        },
        "productTopicSubscription": {
          "Type": "AWS::SNS::Subscription",
          "Properties": {
            "Endpoint": "bipin_gosain@epam.com",
            "Protocol": "email",
            "TopicArn": {
              "Ref": "createProductTopic"
            }
          }
        },
        "productTopicSubscriptionHighValue": {
          "Type": "AWS::SNS::Subscription",
          "Properties": {
            "Endpoint": "bipingosain3492@gmail.com",
            "Protocol": "email",
            "TopicArn": {
              "Ref": "createProductTopic"
            },
            "FilterPolicyScope": "MessageAttributes",
            "FilterPolicy": {
              "maxPrice": [
                {
                  "numeric": [">", 1000]
                }
              ]
            }
          }
        }
      },
      "Outputs": {
        "catalogItemsQueue": {
          "Value": {
            "Ref": "catalogItemsQueue"
          }
        },
        "catalogItemsQueueArn": {
          "Value": {
            "Fn::GetAtt": ["catalogItemsQueue", "Arn"]
          }
        }
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "api",
      "app": "shop-api",
      "frameworkVersion": "3",
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "package": {
        "individually": true,
        "excludeDevDependencies": false,
        "artifactsS3KeyDirname": "serverless/api/dev/code-artifacts",
        "artifactDirectoryName": "serverless/api/dev/1701404399551-2023-12-01T04:19:59.551Z"
      },
      "functions": {
        "createProduct": {
          "$ref": "$[\"service\"][\"functions\"][\"createProduct\"]"
        },
        "productList": {
          "$ref": "$[\"service\"][\"functions\"][\"productList\"]"
        },
        "productById": {
          "$ref": "$[\"service\"][\"functions\"][\"productById\"]"
        },
        "catalogBatchProcess": {
          "$ref": "$[\"service\"][\"functions\"][\"catalogBatchProcess\"]"
        }
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "app": "shop-api",
    "layers": {},
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/api/dev/1701404399551-2023-12-01T04:19:59.551Z",
    "artifact": ""
  }
}
