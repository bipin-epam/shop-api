
Deploying to stage dev
import-service › waiting
product-service › waiting
auth-service › waiting
product-service › deploying
auth-service › deploying
product-service › Running "serverless deploy --stage dev"
auth-service › Running "serverless deploy --stage dev"
product-service › Running "serverless" from node_modules
auth-service › Running "serverless" from node_modules
auth-service › DOTENV: Loading environment variables from .env:
auth-service › - bipin_epam
auth-service › Deploying authorization-service to stage dev (ap-south-1)
product-service › Deploying api to stage dev (ap-south-1)
product-service › Creating Swagger file...
product-service › Warning: in ./node_modules/@aws-sdk/client-dynamodb/node_modules/@aws-sdk/util-user-agent-node/dist-es/is-crt-available.js 3:78-96
product-service ›   Module not found: Error: Can't resolve 'aws-crt' in 'C:\Users\Bipin_Gosain\Desktop\jsx_cloud_course\backend_repo\shop-api\product-service\node_modules\@aws-sdk\client-dynamodb\node_modules\@aws-sdk\util-user-agent-node\dist-es'
product-service › Warning: in ./node_modules/@aws-sdk/client-dynamodb/node_modules/@aws-sdk/util-user-agent-node/dist-es/is-crt-available.js 3:78-96
product-service ›   Module not found: Error: Can't resolve 'aws-crt' in 'C:\Users\Bipin_Gosain\Desktop\jsx_cloud_course\backend_repo\shop-api\product-service\node_modules\@aws-sdk\client-dynamodb\node_modules\@aws-sdk\util-user-agent-node\dist-es'
product-service › Warning: in ./node_modules/@aws-sdk/client-dynamodb/node_modules/@aws-sdk/util-user-agent-node/dist-es/is-crt-available.js 3:78-96
product-service ›   Module not found: Error: Can't resolve 'aws-crt' in 'C:\Users\Bipin_Gosain\Desktop\jsx_cloud_course\backend_repo\shop-api\product-service\node_modules\@aws-sdk\client-dynamodb\node_modules\@aws-sdk\util-user-agent-node\dist-es'
product-service › Warning: in ./node_modules/@aws-sdk/client-dynamodb/node_modules/@aws-sdk/util-user-agent-node/dist-es/is-crt-available.js 3:78-96
product-service ›   Module not found: Error: Can't resolve 'aws-crt' in 'C:\Users\Bipin_Gosain\Desktop\jsx_cloud_course\backend_repo\shop-api\product-service\node_modules\@aws-sdk\client-dynamodb\node_modules\@aws-sdk\util-user-agent-node\dist-es'
product-service › No changes to deploy. Deployment skipped. (17s)
product-service › Need a faster logging experience than CloudWatch? Try our Dev Mode in Console: run "serverless dev"
product-service › no changes
auth-service › ✔ Service deployed to stack authorization-service-dev (32s)
auth-service › functions:
auth-service ›   basicAuthorizer: authorization-service-dev-basicAuthorizer (695 B)
auth-service › Need a faster logging experience than CloudWatch? Try our Dev Mode in Console: run "serverless dev"
auth-service › Running "serverless info --verbose --stage dev"
auth-service › Running "serverless" from node_modules
auth-service › DOTENV: Loading environment variables from .env:
auth-service › - bipin_epam
auth-service › service: authorization-service
auth-service › stage: dev
auth-service › region: ap-south-1
auth-service › stack: authorization-service-dev
auth-service › functions:
auth-service ›   basicAuthorizer: authorization-service-dev-basicAuthorizer
auth-service › 
auth-service › Stack Outputs:
auth-service ›   BasicAuthorizerLambdaFunctionQualifiedArn: arn:aws:lambda:ap-south-1:392849795078:function:authorization-service-dev-basicAuthorizer:12
auth-service ›   ServerlessDeploymentBucketName: authorization-service-dev-serverlessdeploymentbuck-ofjh3ahwyyb1
auth-service › deployed
import-service › deploying
import-service › Running "serverless deploy --stage dev --param catalogItemsQueue=https://sqs.ap-south-1.amazonaws.com/392849795078/api-dev-catalogItemsQueue-v4I9CPvLd1im --param catalogItemsQueueArn=arn:aws:sqs:ap-south-1:392849795078:api-dev-catalogItemsQueue-v4I9CPvLd1im"
import-service › Running "serverless" from node_modules
import-service › Deploying import-service to stage dev (ap-south-1)
import-service › No changes to deploy. Deployment skipped. (19s)
import-service › Monitor all your API routes with Serverless Console: run "serverless --console"
import-service › no changes
