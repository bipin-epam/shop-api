service: import-service
frameworkVersion: "3"
app: shop-api

custom:
  bucket: cloud-course-epam-import-service-bucket

provider:
  name: aws
  runtime: nodejs18.x
  stage: ${opt:stage, 'dev'}
  region: ap-south-1
  profile: epam_bipin
  httpApi:
    cors: true
    authorizers:
      basicAuthorizer:
        type: request
        functionArn: arn:aws:lambda:ap-south-1:392849795078:function:authorization-service-dev-basicAuthorizer
        identitySource:
          - $request.header.Authorization

  environment:
    BUCKET_NAME: ${self:custom.bucket}
    QUEUE_URL: ${param:catalogItemsQueue}

functions:
  importProductsFile:
    handler: src/handlers/importProductsFile/index.handler
    events:
      - httpApi:
          path: /import
          method: get
          authorizer: basicAuthorizer

    iamRoleStatements:
      - Effect: Allow
        Action:
          - s3:PutObject
        Resource:
          - "arn:aws:s3:::${self:custom.bucket}/uploaded/*"

  importFileParser:
    handler: src/handlers/importFileParser/index.handler
    events:
      - s3:
          event: s3:ObjectCreated:*
          bucket: ${self:custom.bucket}
          rules:
            - prefix: uploaded/
          existing: true
    iamRoleStatements:
      - Effect: Allow
        Action:
          - s3:GetObject
          - s3:PutObject
          - s3:DeleteObject
        Resource:
          - "arn:aws:s3:::${self:custom.bucket}/uploaded/*"
          - "arn:aws:s3:::${self:custom.bucket}/parsed/*"
      - Effect: Allow
        Action:
          - sqs:SendMessage
        Resource:
          - ${param:catalogItemsQueueArn}

plugins:
  - serverless-offline
  - serverless-iam-roles-per-function
